/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.4.1 public/models/Table.gltf 
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useConfigurator } from './contexts/configurator'
import { Vector3 } from 'three';
import * as Three from "three"; 
import { useFrame } from '@react-three/fiber';

const ANIM_SPEED = 12;

export function Table(props) {
  const { nodes, materials } = useGLTF('./models/Table.gltf')

  const {legs , legsColor ,tableWidth} = useConfigurator();
  const plate = useRef();
  const leftLegs = useRef();
  const rightLegs = useRef();

 useEffect(() => {
   materials.Metal.color = new Three.Color(legsColor);
 
 }, [legsColor]);
 
 const tableWidthScale = tableWidth/ 100;

 /* useFrame((_state, delta) => {
  const tableWidthScale = tableWidth / 100;
  const targetScale = new Vector3(tableWidthScale, 1, 1);

  plate.current.scale.lerp(targetScale, delta * ANIM_SPEED);

  const targetLeftPosition = new Vector3(-1.5 * tableWidthScale, 0, 0);
  leftLegs.current.position.lerp(targetLeftPosition, delta * ANIM_SPEED); */

  /* const targetRightPosition = new Vector3(1.5 * tableWidthScale, 1, 1);
  rightLegs.current.position.lerp(targetRightPosition, delta * ANIM_SPEED); */
/* }); */
 
  return (
    <group {...props} dispose={null}>
      <mesh
       geometry={nodes.Plate.geometry} 
       material={materials.Plate} 
       castShadow
       scale={[tableWidthScale ,1 ,1]}
       />
      {legs === 0 &&(
        <>
        <mesh 
      geometry={nodes.Legs01Left.geometry} 
      material={materials.Metal} 
      position={[-1.5 , 0, 0]} 
      castShadow
      ref={plate}
      />

      <mesh 
      geometry={nodes.Legs01Right.geometry} 
      material={materials.Metal} 
      position={[1.5 , 0, 0]} 
      castShadow
      ref={leftLegs}
      /></>
      )}

      {legs ===1 && (
        <>
        <mesh 
      geometry={nodes.Legs02Left.geometry} 
      material={materials.Metal} 
      position={[-1.5 , 0, 0]} 
      castShadow
      ref={rightLegs}
      />

      <mesh 
      geometry={nodes.Legs02Right.geometry} 
      material={materials.Metal} 
      position={[1.5 , 0, 0]} 
      castShadow
      />
</>
      )}
{legs === 2 && (
  <>
  <mesh 
      geometry={nodes.Legs03Left.geometry} 
      material={materials.Metal} 
      position={[-1.5 , 0, 0]} 
      castShadow/>

      <mesh 
      geometry={nodes.Legs03Right.geometry} 
      material={materials.Metal} 
      position={[1.5 , 0, 0]} 
      castShadow/>
</>
)}
      
      
    </group>
  )
}

useGLTF.preload('./models/Table.gltf')
